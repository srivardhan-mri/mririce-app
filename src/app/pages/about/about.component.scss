// src/app/pages/about/about.component.scss

// Assumes .page-header.about-us-bg is styled in global styles.scss
// If not, copy it here:
// .page-header.about-us-bg {
//   background-image: url('/assets/images/about-us-banner.webp'); // Path from global styles
// }

// Styles for the main content sections of the About page
.about-section {
  padding: 60px 20px; // From original style.css
  // background-color: var(--background-light); // Default for first .about-section

  // Alternating backgrounds - this logic was in your style.css for main > .about-section
  // Applying it directly within the component's scope.
  // You can assign specific classes in the HTML and style them too.
  &:nth-child(odd) { // If .about-section is directly under app-about's main content area
    background-color: var(--background-light);
  }
  &:nth-child(even) {
    background-color: var(--background-offwhite);
  }
  // Or, if you add specific classes like .intro-section, .legacy-section:
  &.intro-section, &.community-section { // Assuming these are the "light" ones
    background-color: var(--background-light);
  }
  &.legacy-section, &.expertise-section { // Assuming these are the "offwhite" ones
    background-color: var(--background-offwhite);
  }


  .about-content {
    display: grid;
    grid-template-columns: 1fr 1fr; // Default two equal columns
    gap: 50px;
    align-items: center;
    width: 100%;

    // Class to flip order: image on left, text on right
    // In the original CSS, it was .about-content.image-first .about-image { order: -1; }
    // This can be simplified if the HTML structure is consistent.
    // If .about-image is always the second child by default:
    &.image-first {
      .about-image {
        order: -1; // Moves image to the first position in the grid flow
      }
      .about-text {
        order: 1; // Ensures text is second
      }
    }
    // If .about-text is always the first child by default, then text-first needs no specific order.
  }

  .about-text {
    h2 {
      color: var(--mri-logo-blue); // From original style.css
      margin-bottom: 20px;
      font-size: 2.5rem; // From original style.css
      text-align: left; // Overriding global h2 center align
    }

    // .highlight class from original CSS (if you use spans with this class)
    // For now, we used <strong> which is bold by default.
    // .highlight {
    //   color: var(--mri-logo-red);
    //   font-weight: bold;
    // }

    p {
      font-size: 1.1rem; // From original style.css
      line-height: 1.8;
      margin-bottom: 15px;
      color: var(--text-body);

      strong { // Style for the <strong> tags used for highlighting
         color: var(--mri-logo-red); // Or var(--text-dark) if preferred for strong
         font-weight: bold; // Default for strong, but can be more specific
      }
    }
  }

  .about-image { // From original style.css
    position: relative;
    width: 100%;
    padding-bottom: 75%; // For 4:3 aspect ratio, adjust as needed
    height: 0;
    overflow: hidden;
    border-radius: 10px;
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.15);
    background-color: #e9e9e9; // Placeholder background

    img {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      object-fit: cover;
    }
  }
}

.values-section {
  padding: 60px 20px;
  background-color: var(--background-subtle-gray); // From original style.css

  .section-title { // This was h2.section-title in original
    text-align: center;
    color: var(--mri-logo-blue);
    margin-bottom: 40px;
    font-size: 2.2rem;
  }

  .values-grid {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
    gap: 30px;
  }

  .value-item {
    background-color: var(--background-light);
    padding: 30px 25px;
    border-radius: 8px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.08);
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    text-align: center;
    display: flex;
    flex-direction: column;
    align-items: center;

    &:hover {
      transform: translateY(-5px);
      box-shadow: 0 8px 25px rgba(0, 82, 165, 0.15); // MRI Blue shadow tint
    }

    i { // For Font Awesome icons using <i> tag
      font-size: 3rem; // From original style.css
      color: var(--mri-logo-blue); // Was --mri-logo-blue in original
      margin-bottom: 20px;
      display: block;
      line-height: 1; // Ensures icon size is consistent
    }

    h3 {
      font-family: var(--font-primary);
      color: var(--text-dark);
      margin-bottom: 10px;
      font-size: 1.4rem;
      font-weight: 700;
    }

    p {
      font-family: var(--font-secondary);
      font-size: 0.95rem;
      line-height: 1.6;
      color: var(--text-body);
      flex-grow: 1; // Helps if cards have different text lengths
    }
  }
}

.cta-about {
  text-align: center;
  padding: 50px 20px;
  background-color: var(--mri-logo-blue); // From original style.css
  color: var(--text-light);

  h2 {
    color: var(--text-light); // From original style.css
    margin-bottom: 20px;
    text-align: center; // Ensure it's centered
  }

  p {
    color: var(--text-light); // From original style.css
    margin-bottom: 30px;
    max-width: 600px;
    margin-left: auto;
    margin-right: auto;
  }

  // Button styles within .cta-about if different from global
  // Your original style.css had specific .btn-primary and .btn-secondary for .cta-about
  .btn-primary {
    background-color: var(--mri-logo-red);
    border-color: var(--mri-logo-red);
    color: var(--text-light);

    &:hover {
      background-color: #AE1F1F; // Darker Red
      border-color: #AE1F1F;
    }
  }

  .btn-secondary {
    color: var(--text-light);
    border-color: var(--text-light);
    background-color: transparent; // Ensure it's transparent

    &:hover {
      background-color: var(--text-light);
      color: var(--mri-logo-blue);
    }
  }
}

// Responsive adjustments from original style.css for About Us page elements
@media (max-width: 992px) {
  .about-section .about-content {
    grid-template-columns: 1fr; // Stack text/image sections
    gap: 30px;
    text-align: center; // Center align text when stacked

    // Reset order for stacked layout if .image-first was used
    &.image-first {
      .about-image, .about-text {
        order: initial; // Or 0, to reset any explicit ordering
      }
    }
    .about-image {
      margin-bottom: 20px; // Add space below image when stacked
      // max-width: 100%; // Image itself is already max-width 100% in its container
    }
    .about-text h2 {
      font-size: 2rem; // Adjust heading size
    }
  }
  // .values-grid might already be responsive due to auto-fit
}

@media (max-width: 768px) {
  .about-section {
    padding: 40px 15px;
  }
  .values-section {
    padding: 40px 15px;
  }
  // .page-header.about-us-bg h1, .page-header.about-us-bg p styles
  // should be handled by global .page-header responsive rules in styles.scss
}

@media (max-width: 480px) {
  .about-section .about-text h2 {
    font-size: 1.8rem;
  }
  .values-section .value-item h3 { // Was .value-item h3
    font-size: 1.3rem;
  }
}